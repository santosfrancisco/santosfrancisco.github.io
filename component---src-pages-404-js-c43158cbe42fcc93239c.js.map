{"version":3,"sources":["webpack:///./src/components/related-posts/related-posts.js","webpack:///./src/components/related-posts/index.js","webpack:///./src/pages/404.js"],"names":["RelatedPosts","render","posts","this","props","length","map","post","title","node","frontmatter","slug","language","key","to","siteConfig","multilangPosts","React","Component","MainTitle","styled","h1","Ovni","p","SubTitle","h2","CenteredText","Text","NotFoundPage","data","allMarkdownRemark","edges","filter","draft","location","noCover","heroImg","pageQuery"],"mappings":"qKA4BeA,E,gLAtBbC,OAAA,WAAU,IACAC,EAAUC,KAAKC,MAAfF,MAER,OACE,4BACGA,EAAMG,OAASH,EAAMI,KAAI,SAAAC,GACxB,IAAMC,EAAQD,EAAKE,KAAKC,YAAYF,MAC9BG,EAAOJ,EAAKE,KAAKC,YAAYC,KAC7BC,EAAWL,EAAKE,KAAKC,YAAYE,UAAY,KACnD,OACE,wBAAIC,IAAKF,GACP,kBAAC,IAAD,CAAYG,GAAIH,GACbI,IAAWC,gBAAkB,kBAAC,IAAD,CAAMJ,SAAUA,IAC7CJ,OAIJ,kBAAC,IAAD,+B,GAlBcS,IAAMC,WCLjC,mC,gMCUA,IAAMC,EAAYC,UAAOC,GAAV,oEAAGD,CAAH,uDAMTE,EAAOF,UAAOG,EAAV,+DAAGH,CAAH,uDAMJI,EAAWJ,UAAOK,GAAV,mEAAGL,CAAH,oFAORM,EAAeN,kBAAOO,KAAV,uEAAGP,CAAH,wBAIZQ,E,gLACJ3B,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMyB,KAAKC,kBAAkBC,MAAMC,QAAO,SAAAzB,GAAI,OAAKA,EAAKE,KAAKC,YAAYuB,SAE5F,OACE,kBAAC,IAAD,CAAQC,SAAU/B,KAAKC,MAAM8B,SAAUC,SAAS,GAC9C,kBAAC,IAAD,CAAK3B,MAAM,mBACX,kBAAC,IAAD,CACE4B,QAAQ,mBACR5B,MAAM,QAER,kBAAC,IAAD,KACE,kBAACW,EAAD,2BACA,kBAACG,EAAD,WACA,kBAACI,EAAD,mGAKA,kBAACF,EAAD,qBAEA,kBAAC,IAAD,CAActB,MAAOA,O,GArBJe,IAAMC,WA4BlBU,YAER,IAAMS,EAAS","file":"component---src-pages-404-js-c43158cbe42fcc93239c.js","sourcesContent":["import React from 'react'\nimport { StyledLink, Text } from '../commons'\nimport Flag from '../flag'\nimport siteConfig from '../../../data/siteConfig'\n\nclass RelatedPosts extends React.Component {\n  render() {\n    const { posts } = this.props\n\n    return (\n      <ul>\n        {posts.length ? posts.map(post => {\n          const title = post.node.frontmatter.title\n          const slug = post.node.frontmatter.slug\n          const language = post.node.frontmatter.language || 'en'\n          return (\n            <li key={slug}>\n              <StyledLink to={slug}>\n                {siteConfig.multilangPosts && <Flag language={language} />}\n                {title}\n              </StyledLink>\n            </li>\n          )\n        }) : <Text>Nenhum post ainda...</Text>}\n      </ul>\n    )\n  }\n}\nexport default RelatedPosts\n","export { default } from './related-posts'\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Layout from '../components/layout'\nimport Hero from '../components/hero'\nimport Wrapper from '../components/wrapper'\nimport SEO from '../components/SEO'\nimport RelatedPosts from '../components/related-posts'\nimport { Text } from '../components/commons'\n\nconst MainTitle = styled.h1`\n  line-height: 1.5;\n  text-align: center;\n  font-size: 3rem;\n`\n\nconst Ovni = styled.p`\n  line-height: 1.5;\n  text-align: center;\n  font-size: 7rem;\n`\n\nconst SubTitle = styled.h2`\n  padding-top: 40px;\n  line-height: 1.2;\n  border-top: 1px solid #ececec;\n  margin-top: 44px;\n`\n\nconst CenteredText = styled(Text)`\n  text-align: center;\n`\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges.filter(post => !post.node.frontmatter.draft)\n\n    return (\n      <Layout location={this.props.location} noCover={true}>\n        <SEO title=\"Page Not Found\" />\n        <Hero\n          heroImg='/images/404.jpeg'\n          title='404'\n        />\n        <Wrapper>\n          <MainTitle>404 Page Not Found</MainTitle>\n          <Ovni>ðŸ›¸</Ovni>\n          <CenteredText>\n            Looks like you've followed a broken link or entered a URL that\n            doesn't exist on this site.\n          </CenteredText>\n\n          <SubTitle>Recent Posts</SubTitle>\n\n          <RelatedPosts posts={posts} />\n        </Wrapper>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { type: { ne: \"page\" } } }\n      limit: 5\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            tags\n            language\n            slug\n            draft\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}